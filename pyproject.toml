# https://python-poetry.org/docs/pyproject/
[tool.poetry]
name = "..."
version = "0.1.0"
description = "..."
authors = ["Ben Felder <...@...>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "src" }]

[tool.poetry.dependencies]
python = "^3.12"
typer = "*"
loguru = "*"

[tool.poetry.group.dev.dependencies]
ruff = "*"
pyright = "*"
deptry = "*"
vulture = "*"
commitizen = "*"

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-cov = "*"

[tool.poetry.scripts]
src = "src.__main__:cli"

[tool.ruff]
# https://docs.astral.sh/ruff/
src = ["src"]
target-version = "py312"
line-length = 88
extend-select = [
    # way to see conflicting rules?
    "C901",  # mccabe
    "N",     # pep8-naming
    "D",     # pydocstyle
    "UP",    # pyupgrade
    "ASYNC", # flake8-async
    "S",     # flake8-bandit
    "BLE",   # flake8-blind-except
    "FBT",   # flake8-boolean-trap
    "B",     # flake8-bugbear
    "A",     # flake8-builtins
    "COM",   # flake8-commas
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "T10",   # flake8-debugger
    "ISC",   # flake8-implicit-str-concat
    "ICN",   # flake8-import-conventions
    "INP",   # flake8-no-pep420
    "PIE",   # flake8-pie
    "T20",   # flake8-print
    "PT",    # flake8-pytest-style
    "RSE",   # flake8-raise
    "RET",   # flake8-return
    "SLF",   # flake8-self
    "SIM",   # flake8-simplify
    "ARG",   # flake8-unused-arguments
    "PTH",   # flake8-use-pathlib
    "ERA",   # flake8-eradicate
    "PL",    # pylint
    "TRY",   # tryceratops
    "PERF",  # perflint
    "FURB",  # refurb
    "RUF",   # ruff-specific rules
]
ignore = [
    # pydocstyle 'undocumented'
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
]

[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.ruff.lint.isort]
lines-after-imports = 2
known-first-party = ["src", "tests"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pyright]
typeCheckingMode = "basic"

[tool.commitizen]
# Set major_version_zero to false to move to 1.0.0
major_version_zero = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
